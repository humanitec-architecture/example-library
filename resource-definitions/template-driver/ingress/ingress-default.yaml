apiVersion: entity.humanitec.io/v1b1
kind: Definition
metadata:
  id: custom-ingress
entity:
  name: custom-ingress
  type: ingress
  driver_type: humanitec/template
  driver_inputs:
    values:
      host: ${resources.dns.outputs.host}
      automatic_tls_secret_name: {{ if
        (or
          .driver.values.no_tls
          (and
            (hasKey .driver.values "tls_secret_name" )
            (ne .driver.values.tls_secret_name "" )
          )
        ) -}}
        ""
      {{- else -}}
        ${resources.tls-cert.outputs.tls_secret_name}
      {{- end }}
      templates:
        init: |
          host: {{ .driver.values.host | toRawJson }}
          routePaths: ${resources.dns<route.outputs.path}
          routePorts: ${resources.dns<route.outputs.port}
          routeServices: ${resources.dns<route.outputs.service}

          tlsSecretName: {{ .driver.values.tls_secret_name | default .resource.tls_secret_name | default .driver.values.automatic_tls_secret_name | quote }}
        manifests: |
          {{- /*
            Only generate an ingress manifest if there are any routes defined.
          */ -}}
          {{- if gt (len .init.routePaths ) 0 -}}
          ingress.yaml:
            location: namespace
            data:
              apiVersion: networking.k8s.io/v1
              kind: Ingress
              metadata:
                {{- if hasKey .driver.values "annotations" }}
                annotations:
                  {{- range $k, $v := .driver.values.annotations }}
                  {{ $k | toRawJson }}: {{ $v | toRawJson }}
                  {{- end}}
                {{- end}}
                {{- if hasKey .driver.values "labels" }}
                labels:
                  {{- range $k, $v := .driver.values.labels }}
                  {{ $k | toRawJson }}: {{ $v | toRawJson }}
                  {{- end}}
                {{- end}}
                name: {{ .id }}-ingress
              spec:
                {{- if .driver.values.class }}
                ingressClassName: {{ .driver.values.class | toRawJson }}
                {{- end }}
                rules:
                - host: {{ .init.host | toRawJson }}
                  http:
                    paths:
                    {{- /*
                      We are guaranteed that.init.routePaths is non-zero in length,
                      so we don't need to deal with the empty condition.
                    */ -}}
                    {{- range $index, $path := .init.routePaths }}
                    - path: {{ $path | toRawJson }}
                      pathType: {{ $.driver.values.path_type | default "Prefix" | toRawJson }}
                      backend:
                        service:
                          name: {{ index $.init.routeServices $index  | toRawJson }}
                          port:
                            number: {{ index $.init.routePorts $index }}
                    {{- end }}
                {{- if not (or .driver.values.no_tls (eq .init.tlsSecretName "")) }}
                tls:
                - hosts:
                  - {{ .init.host | toRawJson }}
                  secretName: {{ .init.tlsSecretName | quote }}
                {{- end }}
          {{- end -}}
        outputs: |
          no_tls: {{ .driver.values.no_tls | default false }}
          id: {{ .id }}-ingress
  criteria:
    - {}